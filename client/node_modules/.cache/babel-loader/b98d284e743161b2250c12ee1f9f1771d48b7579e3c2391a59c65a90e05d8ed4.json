{"ast":null,"code":"import axios from 'axios';\nimport { ADDNEW_TODO, GETALL_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO, TOGGLE_TAB } from './type.js';\nconst API_URL = 'http://localhost:8000';\nexport const addNewToDo = data => async dispatch => {\n  try {\n    const res = await axios.post(`${API_URL}/todos`, {\n      data\n    });\n    dispatch({\n      type: ADDNEW_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling addnewtodo API', error.message);\n  }\n};\nexport const getAllTodos = () => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/todos`);\n    dispatch({\n      type: GETALL_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling getAllTodo API', error.message);\n  }\n};\nexport const toggleTodo = id => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/todos/${id}`);\n    dispatch({\n      type: TOGGLE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling getAllTodo API', error.message);\n  }\n};\nexport const updateTodo = (id, data) => async dispatch => {\n  try {\n    const res = await axios.put(`${API_URL}/todos/${id}`, {\n      data\n    });\n    dispatch({\n      type: UPDATE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling updateTodo API ', error.message);\n  }\n};\nexport const deleteTodo = id => async dispatch => {\n  try {\n    const res = await axios.delete(`${API_URL}/todos/${id}`);\n    dispatch({\n      type: DELETE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling deleteTodo API ', error.message);\n  }\n};\nexport const toggleTab = tab => async dispatch => {\n  dispatch({\n    type: TOGGLE_TAB,\n    selected: tab\n  });\n};","map":{"version":3,"names":["axios","ADDNEW_TODO","GETALL_TODO","TOGGLE_TODO","UPDATE_TODO","DELETE_TODO","TOGGLE_TAB","API_URL","addNewToDo","data","dispatch","res","post","type","payload","error","console","log","message","getAllTodos","get","toggleTodo","id","updateTodo","put","deleteTodo","delete","toggleTab","tab","selected"],"sources":["/Users/devtyagi/Desktop/ToDo/ToDo-App/client/src/redux/actions/index.js"],"sourcesContent":["import axios from 'axios'\nimport { ADDNEW_TODO,GETALL_TODO,TOGGLE_TODO,UPDATE_TODO,DELETE_TODO,TOGGLE_TAB } from './type.js';\n\nconst API_URL='http://localhost:8000';\n\nexport const addNewToDo=(data)=> async(dispatch) =>{\n    try {\n       const res=await axios.post(`${API_URL}/todos`,{data})\n       dispatch({type:ADDNEW_TODO ,payload: res.data})\n    } catch (error) {\n        console.log('Error while calling addnewtodo API',error.message)\n    }\n}\n\nexport const getAllTodos=()=> async(dispatch)=>{\n    try {\n        const res=await axios.get(`${API_URL}/todos`)\n        dispatch({type:GETALL_TODO ,payload: res.data})\n     } catch (error) {\n         console.log('Error while calling getAllTodo API',error.message)\n     }\n}\n\nexport const toggleTodo=(id)=> async(dispatch)=>{\n    try {\n        const res=await axios.get(`${API_URL}/todos/${id}`)\n        dispatch({type:TOGGLE_TODO ,payload: res.data})\n     } catch (error) {\n         console.log('Error while calling getAllTodo API',error.message)\n     }\n}\n\nexport const updateTodo = (id, data) => async (dispatch) => {\n    try {\n        const res = await axios.put(`${API_URL}/todos/${id}`, { data });\n\n        dispatch({ type: UPDATE_TODO , payload: res.data });\n    } catch (error) {\n        console.log('Error while calling updateTodo API ', error.message);\n    }\n}\n\nexport const deleteTodo = (id) => async (dispatch) => {\n    try {\n        const res = await axios.delete(`${API_URL}/todos/${id}`);\n\n        dispatch({ type: DELETE_TODO , payload: res.data });\n    } catch (error) {\n        console.log('Error while calling deleteTodo API ', error.message);\n    }\n}\n\nexport const toggleTab = (tab) => async (dispatch) => {\n    dispatch({ type: TOGGLE_TAB, selected: tab })\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAACC,WAAW,EAACC,WAAW,EAACC,WAAW,EAACC,WAAW,EAACC,UAAU,QAAQ,WAAW;AAElG,MAAMC,OAAO,GAAC,uBAAuB;AAErC,OAAO,MAAMC,UAAU,GAAEC,IAAI,IAAI,MAAMC,QAAQ,IAAI;EAC/C,IAAI;IACD,MAAMC,GAAG,GAAC,MAAMX,KAAK,CAACY,IAAI,CAAE,GAAEL,OAAQ,QAAO,EAAC;MAACE;IAAI,CAAC,CAAC;IACrDC,QAAQ,CAAC;MAACG,IAAI,EAACZ,WAAW;MAAEa,OAAO,EAAEH,GAAG,CAACF;IAAI,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAACF,KAAK,CAACG,OAAO,CAAC;EACnE;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAACA,CAAA,KAAK,MAAMT,QAAQ,IAAG;EAC3C,IAAI;IACA,MAAMC,GAAG,GAAC,MAAMX,KAAK,CAACoB,GAAG,CAAE,GAAEb,OAAQ,QAAO,CAAC;IAC7CG,QAAQ,CAAC;MAACG,IAAI,EAACX,WAAW;MAAEY,OAAO,EAAEH,GAAG,CAACF;IAAI,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAACF,KAAK,CAACG,OAAO,CAAC;EACnE;AACL,CAAC;AAED,OAAO,MAAMG,UAAU,GAAEC,EAAE,IAAI,MAAMZ,QAAQ,IAAG;EAC5C,IAAI;IACA,MAAMC,GAAG,GAAC,MAAMX,KAAK,CAACoB,GAAG,CAAE,GAAEb,OAAQ,UAASe,EAAG,EAAC,CAAC;IACnDZ,QAAQ,CAAC;MAACG,IAAI,EAACV,WAAW;MAAEW,OAAO,EAAEH,GAAG,CAACF;IAAI,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAACF,KAAK,CAACG,OAAO,CAAC;EACnE;AACL,CAAC;AAED,OAAO,MAAMK,UAAU,GAAGA,CAACD,EAAE,EAAEb,IAAI,KAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACwB,GAAG,CAAE,GAAEjB,OAAQ,UAASe,EAAG,EAAC,EAAE;MAAEb;IAAK,CAAC,CAAC;IAE/DC,QAAQ,CAAC;MAAEG,IAAI,EAAET,WAAW;MAAGU,OAAO,EAAEH,GAAG,CAACF;IAAK,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,KAAK,CAACG,OAAO,CAAC;EACrE;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIH,EAAE,IAAK,MAAOZ,QAAQ,IAAK;EAClD,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC0B,MAAM,CAAE,GAAEnB,OAAQ,UAASe,EAAG,EAAC,CAAC;IAExDZ,QAAQ,CAAC;MAAEG,IAAI,EAAER,WAAW;MAAGS,OAAO,EAAEH,GAAG,CAACF;IAAK,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOM,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,KAAK,CAACG,OAAO,CAAC;EACrE;AACJ,CAAC;AAED,OAAO,MAAMS,SAAS,GAAIC,GAAG,IAAK,MAAOlB,QAAQ,IAAK;EAClDA,QAAQ,CAAC;IAAEG,IAAI,EAAEP,UAAU;IAAEuB,QAAQ,EAAED;EAAI,CAAC,CAAC;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}